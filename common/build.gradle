apply plugin: 'com.google.protobuf'
dependencies {
    // spring managed dependencies
    api 'org.springframework.boot:spring-boot-starter-validation'

    // grpc dependencies
    api "com.salesforce.servicelibs:reactor-grpc:$REACTOR_GRPC_VERSION"
    api "com.google.protobuf:protobuf-java:$PROTOBUF_VERSION"
    api "com.salesforce.servicelibs:reactor-grpc-stub:$REACTOR_GRPC_VERSION"
    api "io.github.lognet:grpc-spring-boot-starter:$GRPC_SPRING_STARTER_VERSION"

    api 'io.jsonwebtoken:jjwt-impl:0.11.5'
    api 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}
import org.apache.tools.ant.taskdefs.condition.Os


def archSuffix = Os.isFamily(Os.FAMILY_MAC) ? ':osx-x86_64' : ''
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$PROTOBUF_PROTOC_VERSION$archSuffix"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$PROTOC_GEN_VERSION"
        }

        reactor {
            artifact = "com.salesforce.servicelibs:reactor-grpc:$REACTOR_GRPC_VERSION"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "annotate_code"
                }
            }
            task.plugins {
                grpc {}
                reactor {}
            }
        }
    }
}